<% layout('layouts/boilerplate.ejs') %> 
<div class="row">
    <h1 class="text-center">New post</h1>
    <div class="col-6 offset-3">
        <form action="/posts" method="POST" class="needs-validation" novalidate>
            <div class="mb-3">
                <label class="form-label" for="title">Title</label>
                <input class="form-control" type="text" name="post[title]" id="title" required>
            </div>
            <div class="mb-3">
                <label class="form-label" for="author">Author</label>
                <input class="form-control" type="text" name="post[author]" id="author" required>
            </div>
            <div class="mb-3">
                <label class="form-label" for="content">Content</label>
                <input class="form-control" type="text" name="post[content]" id="content">
            </div>
            <div class="mb-3">
                <label class="form-label" for="image">Image Url</label>
                <input class="form-control" type="text" name="post[image]" id="image">
            </div>
            <div class="mb-3">
                <label class="form-label" for="category">Category</label>
                <select class="form-select" aria-label="Default select example" id="category" name="post[category]" required>
                    <option selected disabled value="">Select Category</option>
                    <option value="general">General</option>
                    <option value="question">Question</option>
                    <option value="fluff">Fluff</option>
                    <option value="announcement">Announcement</option>
                  </select>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>

<footer>
    <a href="/posts">Posts</a>
</footer>

<!-- 
    When we do "post[category]" for example, this will be parsed by express after being posted to it and
    put inside a 'post' object inside the request object. Very useful!
 -->
<!-- Copied staright from bootstrap docs! -->
 <script>
     // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.from(forms)
        .forEach(function (form) {
        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
            }

            form.classList.add('was-validated')
        }, false)
        })
    })()
 </script>